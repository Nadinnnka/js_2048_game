{"mappings":"ACGA,IADI,EACA,EAAQ,EAGR,EAAS,CAAA,EACP,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAc,SAAS,aAAa,CAAC,iBACrC,EAAa,SAAS,aAAa,CAAC,gBAE1C,SAAS,IACP,OAAO,MAAM,IAAI,CAAC,CAAE,OART,CAQsB,EAAG,WAAM,MAAA,MAAM,CAAS,IAAI,CAAC,E,EAChE,CA2CA,SAAS,KACP,AArBF,WACE,EAAQ,IACR,EAAQ,EAER,IAAK,IAAI,EAAI,EAAG,EApCL,EAoCe,IACxB,IAAK,IAAI,EAAI,EAAG,EApCJ,EAoCiB,IAG3B,EAFa,SAAS,cAAc,CAAC,EAAI,IAAM,GAE9B,CAAK,CAAC,EAAE,CAAC,EAAE,EAIhC,IACA,IAEA,SAAS,cAAc,CAAC,SAAS,SAAS,CAAG,EAE7C,EAAY,KAAK,CAAC,OAAO,CAAG,MAC9B,IAIE,EAAa,KAAK,CAAC,OAAO,CAAG,OAC7B,SAAS,cAAc,CAAC,eAAe,WAAW,CAAG,UAErD,IAAM,EAAc,SAAS,aAAa,CAAC,UAE3C,EAAY,SAAS,CAAC,MAAM,CAAC,SAC7B,EAAY,SAAS,CAAC,GAAG,CAAC,UAC5B,CAEA,SAAS,EAAW,CAAI,CAAE,CAAG,EAC3B,EAAK,SAAS,CAAG,GACjB,EAAK,SAAS,CAAG,OAEb,EAAM,IACR,EAAK,SAAS,CAAG,EAAI,QAAQ,GAEjB,OAAR,GACF,CAAA,EAAS,CAAA,CADX,EAII,GAAO,KACT,EAAK,SAAS,CAAC,GAAG,CAAC,IAAM,EAAI,QAAQ,IAErC,EAAK,SAAS,CAAC,GAAG,CAAC,SAGzB,CAmBA,SAAS,EAAW,CAAG,EACrB,OAAO,EAAI,MAAM,CAAC,SAAA,CAAlB,EAAyB,OAAA,AAAQ,IAAR,C,EAC3B,CAEA,SAAS,EAAM,CAAQ,EACrB,IAAI,EAAM,EAEV,EAAM,EAAW,GAEjB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAI,MAAM,CAAG,EAAG,IAC9B,CAAG,CAAC,EAAE,GAAK,CAAG,CAAC,EAAI,EAAE,GACvB,CAAG,CAAC,EAAE,EAAI,EACV,CAAG,CAAC,EAAI,EAAE,CAAG,EACb,GAAS,CAAG,CAAC,EAAE,EAMnB,IAFA,EAAM,EAAW,GAEV,EAAI,MAAM,CArHH,GAsHZ,EAAI,IAAI,CAAC,GAGX,OAAO,CACT,CA+FA,SAAS,IACP,GAAK,IAML,IAFA,IAAI,EAAQ,CAAA,EAEL,CAAC,GAAO,CACb,IAAM,EAAI,KAAK,KAAK,CAAC,AAlOZ,EAkOY,KAAK,MAAM,IAC1B,EAAI,KAAK,KAAK,CAAC,AAlOT,EAkOS,KAAK,MAAM,IAEhC,GAAI,AAAgB,IAAhB,CAAK,CAAC,EAAE,CAAC,EAAE,CAAQ,CACrB,CAAK,CAAC,EAAE,CAAC,EAAE,CAAG,EAEd,IAAM,EAAO,SAAS,cAAc,CAAC,EAAI,IAAM,EAE/C,CAAA,EAAK,SAAS,CAAG,IACjB,EAAK,SAAS,CAAC,GAAG,CAAC,MACnB,EAAQ,CAAA,CACV,CACF,CACF,CAEA,SAAS,IACP,IAAK,IAAI,EAAI,EAAG,EAlPL,EAkPe,IACxB,IAAK,IAAI,EAAI,EAAG,EAlPJ,EAkPiB,IAC3B,GAAI,AAAgB,IAAhB,CAAK,CAAC,EAAE,CAAC,EAAE,CACb,MAAO,CAAA,EAKb,MAAO,CAAA,CACT,CAEA,SAAS,gBAAgB,CAAC,mBAAoB,YAC5C,AA1OF,WACE,EAAQ,IAER,IAAK,IAAI,EAAI,EAAG,EAvBL,EAuBe,IACxB,IAAK,IAAI,EAAI,EAAG,EAvBJ,EAuBiB,IAG3B,EAFa,AAdnB,SAAoB,CAAC,CAAE,CAAC,EACtB,IAAM,EAAO,SAAS,aAAa,CAAC,OAKpC,OAHA,EAAK,EAAE,CAAG,EAAI,IAAM,EACpB,SAAS,cAAc,CAAC,SAAS,MAAM,CAAC,GAEjC,CACT,EAO8B,EAAG,GAEV,CAAK,CAAC,EAAE,CAAC,EAAE,CAGlC,IAkOE,IAAM,EAAS,SAAS,cAAc,CAAC,cAEvC,CAAA,EAAO,WAAW,CAAG,QACrB,EAAO,gBAAgB,CAAC,QAAS,EACnC,GAEA,SAAS,gBAAgB,CAAC,QAAS,SAAC,CAApC,EACM,AAAW,cAAX,EAAE,IAAI,CACR,AA3IJ,WAGE,IAAK,IAFC,EAAgB,KAAK,SAAS,CAAC,GAE5B,EAAI,EAAG,EAhIL,EAgIe,IAAK,CAC7B,IAAI,EAAM,CAAK,CAAC,EAAE,CAElB,EAAM,EAAM,GACZ,CAAK,CAAC,EAAE,CAAG,EAEX,IAAK,IAAI,EAAI,EAAG,EArIJ,EAqIiB,IAI3B,EAHa,SAAS,cAAc,CAAC,EAAI,IAAM,GACnC,CAAK,CAAC,EAAE,CAAC,EAAE,CAI3B,CAEI,KAAK,SAAS,CAAC,KAAW,GAC5B,GAEJ,IAwHa,AAAW,eAAX,EAAE,IAAI,CACf,AAvHJ,WAGE,IAAK,IAFC,EAAgB,KAAK,SAAS,CAAC,GAE5B,EAAI,EAAG,EAtJL,EAsJe,IAAK,CAC7B,IAAI,EAAM,CAAK,CAAC,EAAE,CAElB,EAAI,OAAO,GACX,EAAM,EAAM,GACZ,CAAK,CAAC,EAAE,CAAG,EAAI,OAAO,GAEtB,IAAK,IAAI,EAAI,EAAG,EA5JJ,EA4JiB,IAI3B,EAHa,SAAS,cAAc,CAAC,EAAI,IAAM,GACnC,CAAK,CAAC,EAAE,CAAC,EAAE,CAI3B,CAEI,KAAK,SAAS,CAAC,KAAW,GAC5B,GAEJ,IAmGa,AAAW,YAAX,EAAE,IAAI,CACf,AAlGJ,WAGE,IAAK,IAFC,EAAgB,KAAK,SAAS,CAAC,GAE5B,EAAI,EAAG,EA5KF,EA4Ke,IAAK,CAChC,IAAI,EAAM,CAAC,CAAK,CAAC,EAAE,CAAC,EAAE,CAAE,CAAK,CAAC,EAAE,CAAC,EAAE,CAAE,CAAK,CAAC,EAAE,CAAC,EAAE,CAAE,CAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAE9D,EAAM,EAAM,GAEZ,IAAK,IAAI,EAAI,EAAG,EAlLP,EAkLiB,IACxB,CAAK,CAAC,EAAE,CAAC,EAAE,CAAG,CAAG,CAAC,EAAE,CAKpB,EAHa,SAAS,cAAc,CAAC,EAAI,IAAM,GACnC,CAAK,CAAC,EAAE,CAAC,EAAE,CAI3B,CAEI,KAAK,SAAS,CAAC,KAAW,GAC5B,GAEJ,IA8EwB,cAAX,EAAE,IAAI,EACf,AA7EJ,WAGE,IAAK,IAFC,EAAgB,KAAK,SAAS,CAAC,GAE5B,EAAI,EAAG,EAnMF,EAmMe,IAAK,CAChC,IAAI,EAAM,CAAC,CAAK,CAAC,EAAE,CAAC,EAAE,CAAE,CAAK,CAAC,EAAE,CAAC,EAAE,CAAE,CAAK,CAAC,EAAE,CAAC,EAAE,CAAE,CAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAE9D,EAAI,OAAO,GAEX,AADA,CAAA,EAAM,EAAM,EAAZ,EACI,OAAO,GAEX,IAAK,IAAI,EAAI,EAAG,EA3MP,EA2MiB,IACxB,CAAK,CAAC,EAAE,CAAC,EAAE,CAAG,CAAG,CAAC,EAAE,CAKpB,EAHa,SAAS,cAAc,CAAC,EAAI,IAAM,GACnC,CAAK,CAAC,EAAE,CAAC,EAAE,CAI3B,CAEI,KAAK,SAAS,CAAC,KAAW,GAC5B,GAEJ,IArIU,KAAmB,AAG7B,WACE,IAAK,IAAI,EAAI,EAAG,EAvFL,EAuFe,IACxB,IAAK,IAAI,EAAI,EAAG,EAvFJ,EAuFiB,IAC3B,GAAK,EAAI,GAAe,CAAK,CAAC,EAAE,CAAC,EAAE,GAAK,CAAK,CAAC,EAAE,CAAC,EAAI,EAAE,EACjD,EAAI,GAAY,CAAK,CAAC,EAAE,CAAC,EAAE,GAAK,CAAK,CAAC,EAAI,EAAE,CAAC,EAAE,CACnD,MAAO,CAAA,EAKb,MAAO,CAAA,CACT,MAiLI,EAAY,SAAS,CAAC,GAAG,CAAC,iBAE1B,WAAW,WACT,EAAY,KAAK,CAAC,OAAO,CAAG,QAC5B,EAAY,SAAS,CAAC,MAAM,CAAC,iBAC7B,EAAY,SAAS,CAAC,GAAG,CAAC,cAC5B,EAAG,KAEH,WAAW,WACT,EAAa,WAAW,CAAG,4CAC3B,EAAa,KAAK,CAAC,OAAO,CAAG,OAC/B,EAAG,MAGD,GACF,CAAA,EAAW,KAAK,CAAC,OAAO,CAAG,GAD7B,EAGA,SAAS,cAAc,CAAC,SAAS,SAAS,CAAG,CAC/C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar board;\nvar score = 0;\nvar rows = 4;\nvar columns = 4;\nvar hasWon = false;\nvar messageStart = document.querySelector(\".message-start\");\nvar messageLose = document.querySelector(\".message-lose\");\nvar messageWin = document.querySelector(\".message-win\");\nfunction initializeBoard() {\n    return Array.from({\n        length: rows\n    }, function() {\n        return Array(columns).fill(0);\n    });\n}\nfunction createTile(r, c) {\n    var tile = document.createElement(\"div\");\n    tile.id = r + \"-\" + c;\n    document.getElementById(\"board\").append(tile);\n    return tile;\n}\nfunction setGame() {\n    board = initializeBoard();\n    for(var r = 0; r < rows; r++)for(var c = 0; c < columns; c++){\n        var tile = createTile(r, c);\n        updateTile(tile, board[r][c]);\n    }\n}\nfunction restartGame() {\n    board = initializeBoard();\n    score = 0;\n    for(var r = 0; r < rows; r++)for(var c = 0; c < columns; c++){\n        var tile = document.getElementById(r + \"-\" + c);\n        updateTile(tile, board[r][c]);\n    }\n    setTwo();\n    setTwo();\n    document.getElementById(\"score\").innerText = score;\n    messageLose.style.display = \"none\";\n}\nfunction startGame() {\n    restartGame();\n    messageStart.style.display = \"none\";\n    document.getElementById(\"startButton\").textContent = \"Restart\";\n    var buttonReset = document.querySelector(\".start\");\n    buttonReset.classList.remove(\"start\");\n    buttonReset.classList.add(\"restart\");\n}\nfunction updateTile(tile, num) {\n    tile.innerText = \"\";\n    tile.className = \"tile\";\n    if (num > 0) {\n        tile.innerText = num.toString();\n        if (num === 2048) hasWon = true;\n        if (num <= 4096) tile.classList.add(\"x\" + num.toString());\n        else tile.classList.add(\"x8192\");\n    }\n}\nfunction isGameOver() {\n    return !hasEmptyTile() && !canAddNumbers();\n}\nfunction canAddNumbers() {\n    for(var r = 0; r < rows; r++)for(var c = 0; c < columns; c++){\n        if (c < columns - 1 && board[r][c] === board[r][c + 1] || r < rows - 1 && board[r][c] === board[r + 1][c]) return true;\n    }\n    return false;\n}\nfunction filterZero(row) {\n    return row.filter(function(num) {\n        return num !== 0;\n    });\n}\nfunction slide(rowSlide) {\n    var row = rowSlide;\n    row = filterZero(row);\n    for(var i = 0; i < row.length - 1; i++)if (row[i] === row[i + 1]) {\n        row[i] *= 2;\n        row[i + 1] = 0;\n        score += row[i];\n    }\n    row = filterZero(row);\n    while(row.length < columns)row.push(0);\n    return row;\n}\nfunction slideLeft() {\n    var originalBoard = JSON.stringify(board);\n    for(var r = 0; r < rows; r++){\n        var row = board[r];\n        row = slide(row);\n        board[r] = row;\n        for(var c = 0; c < columns; c++){\n            var tile = document.getElementById(r + \"-\" + c);\n            var num = board[r][c];\n            updateTile(tile, num);\n        }\n    }\n    if (JSON.stringify(board) !== originalBoard) setTwo();\n}\nfunction slideRight() {\n    var originalBoard = JSON.stringify(board);\n    for(var r = 0; r < rows; r++){\n        var row = board[r];\n        row.reverse();\n        row = slide(row);\n        board[r] = row.reverse();\n        for(var c = 0; c < columns; c++){\n            var tile = document.getElementById(r + \"-\" + c);\n            var num = board[r][c];\n            updateTile(tile, num);\n        }\n    }\n    if (JSON.stringify(board) !== originalBoard) setTwo();\n}\nfunction slideUp() {\n    var originalBoard = JSON.stringify(board);\n    for(var c = 0; c < columns; c++){\n        var row = [\n            board[0][c],\n            board[1][c],\n            board[2][c],\n            board[3][c]\n        ];\n        row = slide(row);\n        for(var r = 0; r < rows; r++){\n            board[r][c] = row[r];\n            var tile = document.getElementById(r + \"-\" + c);\n            var num = board[r][c];\n            updateTile(tile, num);\n        }\n    }\n    if (JSON.stringify(board) !== originalBoard) setTwo();\n}\nfunction slideDown() {\n    var originalBoard = JSON.stringify(board);\n    for(var c = 0; c < columns; c++){\n        var row = [\n            board[0][c],\n            board[1][c],\n            board[2][c],\n            board[3][c]\n        ];\n        row.reverse();\n        row = slide(row);\n        row.reverse();\n        for(var r = 0; r < rows; r++){\n            board[r][c] = row[r];\n            var tile = document.getElementById(r + \"-\" + c);\n            var num = board[r][c];\n            updateTile(tile, num);\n        }\n    }\n    if (JSON.stringify(board) !== originalBoard) setTwo();\n}\nfunction setTwo() {\n    if (!hasEmptyTile()) return;\n    var found = false;\n    while(!found){\n        var r = Math.floor(Math.random() * rows);\n        var c = Math.floor(Math.random() * columns);\n        if (board[r][c] === 0) {\n            board[r][c] = 2;\n            var tile = document.getElementById(r + \"-\" + c);\n            tile.innerText = \"2\";\n            tile.classList.add(\"x2\");\n            found = true;\n        }\n    }\n}\nfunction hasEmptyTile() {\n    for(var r = 0; r < rows; r++)for(var c = 0; c < columns; c++){\n        if (board[r][c] === 0) return true;\n    }\n    return false;\n}\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    setGame();\n    var button = document.getElementById(\"startButton\");\n    button.textContent = \"Start\";\n    button.addEventListener(\"click\", startGame);\n});\ndocument.addEventListener(\"keyup\", function(e) {\n    if (e.code === \"ArrowLeft\") slideLeft();\n    else if (e.code === \"ArrowRight\") slideRight();\n    else if (e.code === \"ArrowUp\") slideUp();\n    else if (e.code === \"ArrowDown\") slideDown();\n    if (isGameOver()) {\n        messageLose.classList.add(\"text-centered\");\n        setTimeout(function() {\n            messageLose.style.display = \"block\";\n            messageLose.classList.remove(\"text-centered\");\n            messageLose.classList.add(\"text-hidden\");\n        }, 1000);\n        setTimeout(function() {\n            messageStart.textContent = 'Press \"Restart\" to begin game. Good luck!';\n            messageStart.style.display = \"block\";\n        }, 2000);\n    }\n    if (hasWon) messageWin.style.opacity = \"1\";\n    document.getElementById(\"score\").innerText = score;\n});\n// eslint-disable-next-line no-unused-vars\nfunction toggleRule() {\n    var rule = document.getElementById(\"rule\");\n    rule.classList.toggle(\"rule-visible\");\n}\n\n//# sourceMappingURL=index.e5c7fc37.js.map\n","'use strict';\n\nlet board;\nlet score = 0;\nconst rows = 4;\nconst columns = 4;\nlet hasWon = false;\nconst messageStart = document.querySelector('.message-start');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\n\nfunction initializeBoard() {\n  return Array.from({ length: rows }, () => Array(columns).fill(0));\n}\n\nfunction createTile(r, c) {\n  const tile = document.createElement('div');\n\n  tile.id = r + '-' + c;\n  document.getElementById('board').append(tile);\n\n  return tile;\n}\n\nfunction setGame() {\n  board = initializeBoard();\n\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      const tile = createTile(r, c);\n\n      updateTile(tile, board[r][c]);\n    }\n  }\n}\n\nfunction restartGame() {\n  board = initializeBoard();\n  score = 0;\n\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      const tile = document.getElementById(r + '-' + c);\n\n      updateTile(tile, board[r][c]);\n    }\n  }\n\n  setTwo();\n  setTwo();\n\n  document.getElementById('score').innerText = score;\n\n  messageLose.style.display = 'none';\n}\n\nfunction startGame() {\n  restartGame();\n  messageStart.style.display = 'none';\n  document.getElementById('startButton').textContent = 'Restart';\n\n  const buttonReset = document.querySelector('.start');\n\n  buttonReset.classList.remove('start');\n  buttonReset.classList.add('restart');\n}\n\nfunction updateTile(tile, num) {\n  tile.innerText = '';\n  tile.className = 'tile';\n\n  if (num > 0) {\n    tile.innerText = num.toString();\n\n    if (num === 2048) {\n      hasWon = true;\n    }\n\n    if (num <= 4096) {\n      tile.classList.add('x' + num.toString());\n    } else {\n      tile.classList.add('x8192');\n    }\n  }\n}\n\nfunction isGameOver() {\n  return !hasEmptyTile() && !canAddNumbers();\n}\n\nfunction canAddNumbers() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      if ((c < columns - 1 && board[r][c] === board[r][c + 1])\n        || (r < rows - 1 && board[r][c] === board[r + 1][c])) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction filterZero(row) {\n  return row.filter(num => num !== 0);\n}\n\nfunction slide(rowSlide) {\n  let row = rowSlide;\n\n  row = filterZero(row);\n\n  for (let i = 0; i < row.length - 1; i++) {\n    if (row[i] === row[i + 1]) {\n      row[i] *= 2;\n      row[i + 1] = 0;\n      score += row[i];\n    }\n  }\n\n  row = filterZero(row);\n\n  while (row.length < columns) {\n    row.push(0);\n  }\n\n  return row;\n}\n\nfunction slideLeft() {\n  const originalBoard = JSON.stringify(board);\n\n  for (let r = 0; r < rows; r++) {\n    let row = board[r];\n\n    row = slide(row);\n    board[r] = row;\n\n    for (let c = 0; c < columns; c++) {\n      const tile = document.getElementById(r + '-' + c);\n      const num = board[r][c];\n\n      updateTile(tile, num);\n    }\n  }\n\n  if (JSON.stringify(board) !== originalBoard) {\n    setTwo();\n  }\n}\n\nfunction slideRight() {\n  const originalBoard = JSON.stringify(board);\n\n  for (let r = 0; r < rows; r++) {\n    let row = board[r];\n\n    row.reverse();\n    row = slide(row);\n    board[r] = row.reverse();\n\n    for (let c = 0; c < columns; c++) {\n      const tile = document.getElementById(r + '-' + c);\n      const num = board[r][c];\n\n      updateTile(tile, num);\n    }\n  }\n\n  if (JSON.stringify(board) !== originalBoard) {\n    setTwo();\n  }\n}\n\nfunction slideUp() {\n  const originalBoard = JSON.stringify(board);\n\n  for (let c = 0; c < columns; c++) {\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n\n    row = slide(row);\n\n    for (let r = 0; r < rows; r++) {\n      board[r][c] = row[r];\n\n      const tile = document.getElementById(r + '-' + c);\n      const num = board[r][c];\n\n      updateTile(tile, num);\n    }\n  }\n\n  if (JSON.stringify(board) !== originalBoard) {\n    setTwo();\n  }\n}\n\nfunction slideDown() {\n  const originalBoard = JSON.stringify(board);\n\n  for (let c = 0; c < columns; c++) {\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n\n    row.reverse();\n    row = slide(row);\n    row.reverse();\n\n    for (let r = 0; r < rows; r++) {\n      board[r][c] = row[r];\n\n      const tile = document.getElementById(r + '-' + c);\n      const num = board[r][c];\n\n      updateTile(tile, num);\n    }\n  }\n\n  if (JSON.stringify(board) !== originalBoard) {\n    setTwo();\n  }\n}\n\nfunction setTwo() {\n  if (!hasEmptyTile()) {\n    return;\n  }\n\n  let found = false;\n\n  while (!found) {\n    const r = Math.floor(Math.random() * rows);\n    const c = Math.floor(Math.random() * columns);\n\n    if (board[r][c] === 0) {\n      board[r][c] = 2;\n\n      const tile = document.getElementById(r + '-' + c);\n\n      tile.innerText = '2';\n      tile.classList.add('x2');\n      found = true;\n    }\n  }\n}\n\nfunction hasEmptyTile() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      if (board[r][c] === 0) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  setGame();\n\n  const button = document.getElementById('startButton');\n\n  button.textContent = 'Start';\n  button.addEventListener('click', startGame);\n});\n\ndocument.addEventListener('keyup', (e) => {\n  if (e.code === 'ArrowLeft') {\n    slideLeft();\n  } else if (e.code === 'ArrowRight') {\n    slideRight();\n  } else if (e.code === 'ArrowUp') {\n    slideUp();\n  } else if (e.code === 'ArrowDown') {\n    slideDown();\n  }\n\n  if (isGameOver()) {\n    messageLose.classList.add('text-centered');\n\n    setTimeout(() => {\n      messageLose.style.display = 'block';\n      messageLose.classList.remove('text-centered');\n      messageLose.classList.add('text-hidden');\n    }, 1000);\n\n    setTimeout(() => {\n      messageStart.textContent = 'Press \"Restart\" to begin game. Good luck!';\n      messageStart.style.display = 'block';\n    }, 2000);\n  }\n\n  if (hasWon) {\n    messageWin.style.opacity = '1';\n  }\n  document.getElementById('score').innerText = score;\n});\n\n// eslint-disable-next-line no-unused-vars\nfunction toggleRule() {\n  const rule = document.getElementById('rule');\n\n  rule.classList.toggle('rule-visible');\n}\n"],"names":["board","score","hasWon","messageStart","document","querySelector","messageLose","messageWin","initializeBoard","Array","from","length","fill","startGame","restartGame","r","c","updateTile","getElementById","setTwo","innerText","style","display","textContent","buttonReset","classList","remove","add","tile","num","className","toString","filterZero","row","filter","slide","rowSlide","i","push","hasEmptyTile","found","Math","floor","random","addEventListener","setGame","createTile","createElement","id","append","button","e","code","slideLeft","originalBoard","JSON","stringify","slideRight","reverse","slideUp","slideDown","canAddNumbers","columns","rows","setTimeout","opacity"],"version":3,"file":"index.e5c7fc37.js.map"}